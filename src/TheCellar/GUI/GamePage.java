package TheCellar.GUI;

import TheCellar.Charts.Animation;
import TheCellar.Charts.BarGraph;
import TheCellar.Charts.LineGraph;
import TheCellar.Charts.PieChart;
import TheCellar.Main;

import javax.swing.*;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.Canvas;
import java.awt.Button;
import java.awt.Color;
import java.awt.Font;
import java.awt.Component;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.ArrayList;
import javax.swing.border.CompoundBorder;

// window builder class that creates the gui
// was mainly auto generated by eclipse
public class GamePage {
	private JFrame frame;
	public boolean textListenerEnabled = true;
	
	public static void showWindow() {
		
		
	}
	
	public GamePage() {
		// set title
		frame = new JFrame();
		
		frame.setTitle("The Cellar");

		// set close operation
		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		frame.setBounds(100, 100, 950, 500);
		frame.getContentPane().setLayout(null);
		
		JSlider slider = new JSlider();
		slider.setBounds(14, 384, 151, 26);
		frame.getContentPane().add(slider);
		slider.addChangeListener(e -> {
			if (textListenerEnabled) {
				System.out.println("Slider value: " + slider.getValue());

				float percent = slider.getValue() / 100.0f;
				int min = Main.game.GameSpeedMin;
				int max = Main.game.GameSpeedMax;
				int range = max - min;
				int value = (int) (min + range * percent);

				Main.game.SetGameSpeed(value);
			}
		});
		
		JLabel timeLabel = new JLabel("Game Speed\r\n");
		timeLabel.setBounds(54, 369, 81, 14);
		frame.getContentPane().add(timeLabel);
		
		JLabel networthLabel = new JLabel("$10,000");
		networthLabel.setBackground(new Color(192, 192, 192));
		networthLabel.setFont(new Font("SansSerif", Font.ITALIC, 18));
		networthLabel.setBounds(843, 8, 81, 38);
		frame.getContentPane().add(networthLabel);

		ArrayList<Double> values = new ArrayList<Double>();
		values.add(40.0);
		values.add(20.0);
		values.add(30.0);
		values.add(40.0);

		ArrayList<String> names = new ArrayList<String>();
		names.add("goggle");
		names.add("bning");
		names.add("brav");
		names.add("brrrr");

		PieChart pieChart = new PieChart(names, values);
		pieChart.setBounds(406, 331, 200, 122);
		frame.getContentPane().add(pieChart);

		LineGraph lineGraph = new LineGraph("time", "company value", values);
		lineGraph.setBounds(633, 331, 200, 122);
		frame.getContentPane().add(lineGraph);

		BarGraph barGraph = new BarGraph("value", names, values);
		barGraph.setBounds(175, 331, 200, 122);
		frame.getContentPane().add(barGraph);
		
		JPanel Animation = new Animation();
		Animation.setBorder(new CompoundBorder());
		Animation.setBackground(new Color(248, 248, 248));
		Animation.setBounds(101, 11, 732, 312);
		frame.getContentPane().add(Animation);
		
		JPanel panel_1 = new JPanel();
		panel_1.setBackground(new Color(192, 192, 192));
		panel_1.setBounds(11, 9, 81, 311);
		frame.getContentPane().add(panel_1);
		panel_1.setLayout(null);
		
		JButton pauseButton = new JButton("Pause");
		pauseButton.setBounds(6, 5, 69, 45);
		panel_1.add(pauseButton);
		pauseButton.setFont(new Font("Arial", Font.BOLD, 12));
		pauseButton.setBackground(new Color(128, 128, 128));
		pauseButton.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				frame.setVisible(false);
				PauseMenuPage pause = new TheCellar.GUI.PauseMenuPage();
				pause.showWindow();		}
		});
		
		Button bankButton = new Button("Bank");
		bankButton.setBounds(6, 75, 69, 65);
		panel_1.add(bankButton);
		bankButton.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				frame.setVisible(false);
				TheCellar.GUI.BankPage bank = new TheCellar.GUI.BankPage();
				bank.showWindow();
			}
		});
		bankButton.setFont(new Font("SansSerif", Font.BOLD, 18));
		bankButton.setBackground(new Color(248, 242, 22));
		
		Button shopButton = new Button("Shop");
		shopButton.setBounds(7, 154, 69, 65);
		panel_1.add(shopButton);
		shopButton.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				frame.setVisible(false);
				TheCellar.GUI.ShopPage shop = new ShopPage();
				shop.showWindow();
			}
		});
		shopButton.setFont(new Font("SansSerif", Font.BOLD, 18));
		shopButton.setBackground(new Color(0, 255, 255));
		
		
				
				Button hireButton = new Button("Hire");
				hireButton.setBounds(6, 236, 69, 65);
				panel_1.add(hireButton);
				hireButton.setFont(new Font("SansSerif", Font.BOLD, 18));
				hireButton.setBackground(new Color(255, 0, 255));
				hireButton.addActionListener(new ActionListener() {
					public void actionPerformed(ActionEvent e) {
						frame.setVisible(false);
						TheCellar.GUI.HirePage chefs = new HirePage();
						chefs.showWindow();	
				}
				});
		
		
		
		frame.setVisible(true);
	}
	
	private static void addPopup(Component component, final JPopupMenu popup) {
		component.addMouseListener(new MouseAdapter() {
			public void mousePressed(MouseEvent e) {
				if (e.isPopupTrigger()) {
					showMenu(e);
				}
			}
			public void mouseReleased(MouseEvent e) {
				if (e.isPopupTrigger()) {
					showMenu(e);
				}
			}
			private void showMenu(MouseEvent e) {
				popup.show(e.getComponent(), e.getX(), e.getY());
			}
		});
		
		
	}
		
		public static void main(String[] args) {
			new GamePage();
			showWindow();
			
			
	}
}

